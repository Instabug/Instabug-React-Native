
apply plugin: 'com.android.library'

def DEFAULT_COMPILE_SDK_VERSION = 28
def DEFAULT_BUILD_TOOLS_VERSION = "28.0.0"
def DEFAULT_TARGET_SDK_VERSION = 28

android {
    compileSdkVersion rootProject.hasProperty('compileSdkVersion') ? rootProject.compileSdkVersion : DEFAULT_COMPILE_SDK_VERSION
    buildToolsVersion rootProject.hasProperty('buildToolsVersion') ? rootProject.buildToolsVersion : DEFAULT_BUILD_TOOLS_VERSION

    defaultConfig {
        minSdkVersion 16
        targetSdkVersion rootProject.hasProperty('targetSdkVersion') ? rootProject.targetSdkVersion : DEFAULT_TARGET_SDK_VERSION
        versionCode 1
        versionName "1.0"
        ndk {
            abiFilters "armeabi-v7a", "x86"
        }
    }
    lintOptions {
       warning 'InvalidPackage'
        abortOnError true
        // SuppressLint WrongConstant was used to suppress errors when using arrays of ints to represent annotations.
    }
}

dependencies {
    implementation 'com.facebook.react:react-native:+'
    api('com.instabug.library:instabug:8.6.1.0') {
        exclude group: 'com.android.support:appcompat-v7'
    }
    testImplementation 'org.mockito:mockito-core:1.10.19'
    testImplementation 'junit:junit:4.12'
    testImplementation 'org.powermock:powermock-api-mockito:1.6.6'
    testImplementation 'org.powermock:powermock-module-junit4-rule-agent:1.6.2'
    testImplementation 'org.powermock:powermock-module-junit4-rule:1.6.6'
    testImplementation 'org.powermock:powermock-module-junit4:1.6.6'
}


import org.apache.tools.ant.taskdefs.condition.Os
task upload_sourcemap(type: Exec) {
    if (Os.isFamily(Os.FAMILY_WINDOWS)) {
        commandLine 'cmd', '/c', 'echo Automatic Upload of sourcemap files is currently not available on windows, please generate the sourcemapfiles and upload them to the dashboard'
        project.logger.lifecycle('Automatic Upload of sourcemap files is currently not available on windows, please generate the sourcemapfiles and upload them to the dashboard')
    } else {
        environment "INSTABUG_APP_TOKEN", "YOUR_APP_TOKEN"
        commandLine 'sh', './upload_sourcemap.sh'
    }
}

tasks.whenTaskAdded { task ->
    if (task.name == 'preReleaseBuild') {
        task.dependsOn upload_sourcemap 
    }
}
