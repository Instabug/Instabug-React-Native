apply plugin: 'com.android.library'

String getExtOrDefault(String name) {
    if (rootProject.ext.has(name)) {
        return rootProject.ext.get(name)
    }
    return project.properties['InstabugReactNative_' + name]
}

android {
    compileSdkVersion getExtOrDefault('compileSdkVersion').toInteger()
    buildToolsVersion getExtOrDefault('buildToolsVersion')

    defaultConfig {
        minSdkVersion getExtOrDefault('minSdkVersion').toInteger()
        targetSdkVersion getExtOrDefault('targetSdkVersion').toInteger()
        versionCode 1
        versionName "11.2.0"
        multiDexEnabled true
        ndk {
            abiFilters "armeabi-v7a", "x86"
        }
    }
    lintOptions {
       warning 'InvalidPackage'
        abortOnError true
        // SuppressLint WrongConstant was used to suppress errors when using arrays of ints to represent annotations.
    }
}

dependencies {
    implementation "androidx.multidex:multidex:2.0.1"
    implementation 'com.facebook.react:react-native:+'
    implementation 'com.instabug.library:instabug:11.5.1'

    testImplementation "org.mockito:mockito-inline:3.4.0"
    testImplementation "org.mockito:mockito-android:3.4.0"
    testImplementation 'junit:junit:4.13.2'
}


import org.apache.tools.ant.taskdefs.condition.Os
task upload_sourcemap(type: Exec) {
    if (Os.isFamily(Os.FAMILY_WINDOWS)) {
        commandLine 'cmd', '/c', 'echo Automatic Upload of sourcemap files is currently not available on windows, please generate the sourcemapfiles and upload them to the dashboard'
        project.logger.lifecycle('Automatic Upload of sourcemap files is currently not available on windows, please generate the sourcemapfiles and upload them to the dashboard')
    } else {
        commandLine 'sh', './upload_sourcemap.sh', rootDir
    }
}

tasks.whenTaskAdded { task ->
    if (task.name == 'preReleaseBuild' &&
        (rootProject.hasProperty("instabugUploadEnable") ? rootProject.instabugUploadEnable : true)) {
        task.dependsOn upload_sourcemap 
    }
}
